#                    100-input.conf                 #
#                        Input file                      #
 
input {
        #  Registration of the sugarcrm log.        #
        file {
	      # Change PATH-TO-DIRECTORY to your own path leading to KibanaDashboardSecurityScanningApplicatie
              path => "PATH-TO-DIRECTORY/KibanaDashboardSecurityScanningApplicatie/SecurityLogs/QuaySecurityScanVulnerabilityReport.txt"
              start_position => "beginning"
              type => "QuaySecurityScan"
              codec => multiline {
                      charset => "ASCII-8BIT"
                      pattern => "^                        \"name\":"
                      negate  => true
                      what => "previous"
              }
        }
}


#            200-filter.config.conf    #
#               Configuration file      #
 
filter {
 
            #       Config fields   #
 
     mutate {
             add_field => [ "log_team" , "lips_team" ]
             add_field => [ "log_environment" , "ACC" ]
             add_field => [ "log_component" , "Quay" ]
             add_field => [ "log_domain" , "redhatcloud" ]
             add_field => [ "log_type" , "%{type}" ]
      }
 
            #      Generic configs   #
 
      mutate {
                 # Add config fields
                add_field => [ "dummy" , "<versluierd>"]
	}
}
#         300-filter.application.conf         #
#                      Filter file                      #
filter {
 
       #      log filters     #
 
        if  [type] == "QuaySecurityScan" {
                grok {
                        match => [ "message", "%{DATA}\"name\": \"%{DATA:name}\",\n%{SPACE}\"namespaceName\": \"%{DATA:namespaceName}\",\n%{SPACE}\"version\": \"%{DATA:version}\",\n%{SPACE}\"versionformat\": \"%{DATA:versionformat}\",\n" ]
                        add_tag => [ "%{log_team}", "%{host}", "%{log_type}", "%{log_environment}", "%{log_component}" ]
                }
		# Overweeg of vulnarabilities als geheel blok in veld kan, nu wordt met slechts 1 description rekening gehouden.
                # Of 1 vulnarability meerdere keren met per fix 1 description, dan werkt het
		# Splitsen grok in leesbare delen
		grok {
                        match => [ "message", "%{DATA}\"description\": \"%{DATA:description}\",\n%{DATA}\"fixedby\": \"%{DATA:fixedby}\",\n%{DATA}\"link\": \"%{DATA:link}\",\n%{DATA}\"severity\": \"%{DATA:severity}\"\n" ]
			remove_field => ["message"]
                }
 
        }
}
output {
        #stdout { codec => rubydebug }
        elasticsearch {
        	hosts => ["http://localhost:9200"]
        	index => "%{log_team}-%{log_domain}"
        }
  
}
